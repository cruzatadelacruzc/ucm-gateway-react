#To stop the cluster, type docker-compose down.
#Data volumes will persist, so itâ€™s possible to start the cluster again with the same data using docker-compose up.
#To destroy the cluster and the data volumes, just type docker-compose down -v.

version: '3'
services:
  elasticsearch:
    image: elasticsearch:6.8.16
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=ucm-docker-cluster
      - discovery.zen.minimum_master_nodes=2
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256m -Xmx512m"
      - "ES_JAVA_OPTS=-XX:UseAVX=0"
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.security.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.keystore.path=/usr/share/elasticsearch/config/certificates/elastic-certificates.p12
      - xpack.security.transport.ssl.truststore.path=/usr/share/elasticsearch/config/certificates/elastic-certificates.p12
      - "http.cors.enabled=true"
      - "http.cors.allow-origin=*"
      - "http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization"
      - "http.cors.allow-credentials=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ${ES_DATA}/esdata1:/usr/share/elasticsearch/data
      - ${CERTS_DIR}:/usr/share/elasticsearch/config/certificates
    ports:
      - 9200:9200

  elasticsearch2:
    image: elasticsearch:6.8.16
    container_name: elasticsearch2
    environment:
      - node.name=elasticsearc2
      - discovery.zen.minimum_master_nodes=2
      - cluster.name=ucm-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256m -Xmx512m"
      - "ES_JAVA_OPTS=-XX:UseAVX=0"
      - discovery.zen.ping.unicast.hosts=elasticsearch
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.security.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.keystore.path=/usr/share/elasticsearch/config/certificates/elastic-certificates.p12
      - xpack.security.transport.ssl.truststore.path=/usr/share/elasticsearch/config/certificates/elastic-certificates.p12
      - "http.cors.enabled=true"
      - "http.cors.allow-origin=*"
      - "http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization"
      - "http.cors.allow-credentials=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ${ES_DATA}/esdata2:/usr/share/elasticsearch/data
      - ${CERTS_DIR}:/usr/share/elasticsearch/config/certificates

  kibana:
    image: kibana:6.8.16
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    ports:
      - 5601:5601
    volumes:
      - kibana.yml:/usr/share/kibana/config/kibana.yml
    depends_on:
      - elasticsearch