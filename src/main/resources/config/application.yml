# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
  client:
    registry-fetch-interval-seconds: 10
    instance-info-replication-interval-seconds: 10
    enabled: true
  instance:
    appname: reactweb
    instanceId: reactweb:${spring.application.instance-id:${random.value}}
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
    status-page-url: ${management.endpoints.web.base-path}/info
    health-check-url: ${management.endpoints.web.base-path}/health
    metadata-map:
      zone: primary # This is needed for the load balancer
      profile: ${spring.profiles.active}
      version: #project.version#
      git-version: ${git.commit.id.describe:}
      git-commit: ${git.commit.id.abbrev:}
      git-branch: ${git.branch:}
      context-path: ${server.servlet.context-path:}

management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include: ['configprops', 'env', 'gateway', 'health', 'info', 'jhimetrics', 'logfile', 'loggers', 'prometheus', 'threaddump']
  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
      probes:
        enabled: true
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
  health:
    group:
      liveness:
        include: livenessState
      readiness:
        include: readinessState
    mail:
      enabled: false # When using the MailService, configure an SMTP server and set this to true
  metrics:
    export:
      # Prometheus is the default metrics backend
      prometheus:
        enabled: true
        step: 60
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    tags:
      application: ${spring.application.name}
    web:
      server:
        request:
          autotime:
            enabled: true


spring:
  application:
    name: reactweb
  cloud:
    gateway:
      default-filters:
        - TokenRelay
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
          predicates:
            - name: Path
              args:
                pattern: "'/services/'+serviceId.toLowerCase()+'/**'"
          filters:
            - name: RewritePath
              args:
                regexp: "'/services/' + serviceId.toLowerCase() + '/(?<remaining>.*)'"
                replacement: "'/${remaining}'"
      httpclient:
        pool:
          max-connections: 1000
  main:
    allow-bean-definition-overriding: true
  messages:
    basename: i18n/messages
  thymeleaf:
    mode: HTML
  security:
    oauth2:
      client:
        registration:
          login-client:
            provider: keycloak
            client-id: web_app
            client-secret: web_app
            scope: openid,profile,email
        provider:
          keycloak:
            issuer-uri: http://localhost:9080/auth/realms/jhipster

logging:
  file:
    name: target/reactweb.log

server:
  port: 8080
  forward-headers-strategy: framework # https://github.com/spring-projects/spring-boot/commit/959e161555a147cac812915b1677abb46e3a860b

application:
  clientApp:
    name: reactweb
  swagger:
    default-include-pattern: ${server.servlet.context-path:}/api/.*
    title: React Gateway API
    description: React Gateway API documentation
    version: 0.0.1
    terms-of-service-url:
    contact-name:
    contact-url:
    contact-email:
    license: unlicensed
    license-url:
  security:
#    content-security-policy: "default-src 'self'; frame-src 'self' data:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://storage.googleapis.com; style-src 'self' https://fonts.googleapis.com 'unsafe-inline'; img-src 'self' data:; font-src 'self' https://fonts.gstatic.com data:"
    oauth2:
      audience:
        - account
        - api://default

